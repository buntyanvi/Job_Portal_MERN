{"ast":null,"code":"var _jsxFileName = \"C:\\\\ECHO\\\\MERNSTACK\\\\Job_portal_Mern\\\\Job-Application-Portal\\\\frontend\\\\src\\\\components\\\\Applicants\\\\MyApplications.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport NavbarApplicant from '../templates/NavbarApplicant';\nimport GetUser from \"../../context/getUser\";\n\nfunction MyApplications(props) {\n  const user = GetUser();\n  const [fetchedJobs, setJobs] = useState([]);\n  axios.post('http://localhost:4000/job/getJobs', {\n    jobIds: user.jobsApplied\n  }).then(res => {\n    setJobs(res.data.jobs);\n  }).catch(function (error) {\n    console.log(error);\n  });\n\n  function submitRating(jobId) {\n    props.history.push('/rate-job/' + jobId);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavbarApplicant, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 33\n    }\n  }), user.jobsApplied && user.jobsApplied.length !== 0 ? /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 41\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 41\n    }\n  }, \"Date of Joining\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 41\n    }\n  }, \"Salary (per month)\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 41\n    }\n  }, \"Recruiter Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 41\n    }\n  }, \"Job Status\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 41\n    }\n  }, \"Rate Job\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }, fetchedJobs && fetchedJobs.map((fetchedJob, ind) => /*#__PURE__*/React.createElement(TableRow, {\n    key: ind,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 37\n    }\n  }, \" \", fetchedJob ? fetchedJob.title : \"\", \" \"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 37\n    }\n  }, \" \", fetchedJob && fetchedJob.receivedApplicants && fetchedJob.receivedApplicants.map(bJob => bJob.email === user.email ? bJob.dateOfJoining && bJob.dateOfJoining.split(\"T\")[0] : \"\"), \" \"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 37\n    }\n  }, \" \", fetchedJob ? fetchedJob.salary : \"\", \" \"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 37\n    }\n  }, \" \", fetchedJob ? fetchedJob.name : \"\", \" \"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 37\n    }\n  }, \" \", fetchedJob && fetchedJob.receivedApplicants && fetchedJob.receivedApplicants.map(bJob => bJob.email === user.email ? bJob.status : \"\"), \" \"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 37\n    }\n  }, \" \", fetchedJob && fetchedJob.receivedApplicants && fetchedJob.receivedApplicants.map(bJob => bJob.email === user.email && bJob.status == \"Accepted\" ? /*#__PURE__*/React.createElement(Button, {\n    onClick: () => submitRating(fetchedJob._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 199\n    }\n  }, \"Rate\") : \"\"))))))))) : \"You have no applications currently\");\n}\n\nexport default MyApplications;","map":{"version":3,"sources":["C:/ECHO/MERNSTACK/Job_portal_Mern/Job-Application-Portal/frontend/src/components/Applicants/MyApplications.js"],"names":["React","useState","axios","Paper","Grid","TableCell","TableHead","TableRow","Table","TableBody","Button","NavbarApplicant","GetUser","MyApplications","props","user","fetchedJobs","setJobs","post","jobIds","jobsApplied","then","res","data","jobs","catch","error","console","log","submitRating","jobId","history","push","length","map","fetchedJob","ind","title","receivedApplicants","bJob","email","dateOfJoining","split","salary","name","status","_id"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAE3B,QAAMC,IAAI,GAAGH,OAAO,EAApB;AACA,QAAM,CAACI,WAAD,EAAcC,OAAd,IAAyBhB,QAAQ,CAAC,EAAD,CAAvC;AAEAC,EAAAA,KAAK,CAACgB,IAAN,CAAW,mCAAX,EAAgD;AAAEC,IAAAA,MAAM,EAAEJ,IAAI,CAACK;AAAf,GAAhD,EACKC,IADL,CACUC,GAAG,IAAI;AACTL,IAAAA,OAAO,CAACK,GAAG,CAACC,IAAJ,CAASC,IAAV,CAAP;AACH,GAHL,EAIKC,KAJL,CAIW,UAASC,KAAT,EAAgB;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GANL;;AAQA,WAASG,YAAT,CAAsBC,KAAtB,EAA6B;AACzBhB,IAAAA,KAAK,CAACiB,OAAN,CAAcC,IAAd,CAAmB,eAAaF,KAAhC;AACH;;AAED,sBACI;AAAK,IAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,oBACwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADxB,EAEKf,IAAI,CAACK,WAAL,IAAoBL,IAAI,CAACK,WAAL,CAAiBa,MAAjB,KAA4B,CAAhD,gBACD,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,EAAvB;AAA2B,IAAA,EAAE,EAAE,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADR,eAEQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFR,eAGQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHR,eAIQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJR,eAKQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALR,eAMQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANR,CADJ,CADJ,eAWI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCjB,WAAW,IAAIA,WAAW,CAACkB,GAAZ,CAAgB,CAACC,UAAD,EAAaC,GAAb,kBAC5B,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAaD,UAAU,GAAGA,UAAU,CAACE,KAAd,GAAsB,EAA7C,MADJ,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAaF,UAAU,IAAIA,UAAU,CAACG,kBAAzB,IAA+CH,UAAU,CAACG,kBAAX,CAA8BJ,GAA9B,CAAmCK,IAAD,IAAWA,IAAI,CAACC,KAAL,KAAezB,IAAI,CAACyB,KAApB,GAA4BD,IAAI,CAACE,aAAL,IAAsBF,IAAI,CAACE,aAAL,CAAmBC,KAAnB,CAAyB,GAAzB,EAA8B,CAA9B,CAAlD,GAAqF,EAAlI,CAA5D,MAFJ,eAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAaP,UAAU,GAAGA,UAAU,CAACQ,MAAd,GAAuB,EAA9C,MAHJ,eAII,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAaR,UAAU,GAAGA,UAAU,CAACS,IAAd,GAAqB,EAA5C,MAJJ,eAKI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAaT,UAAU,IAAIA,UAAU,CAACG,kBAAzB,IAA+CH,UAAU,CAACG,kBAAX,CAA8BJ,GAA9B,CAAmCK,IAAD,IAAWA,IAAI,CAACC,KAAL,KAAezB,IAAI,CAACyB,KAApB,GAA4BD,IAAI,CAACM,MAAjC,GAA0C,EAAvF,CAA5D,MALJ,eAMI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAaV,UAAU,IAAIA,UAAU,CAACG,kBAAzB,IAA+CH,UAAU,CAACG,kBAAX,CAA8BJ,GAA9B,CAAmCK,IAAD,IAAWA,IAAI,CAACC,KAAL,KAAezB,IAAI,CAACyB,KAApB,IAA6BD,IAAI,CAACM,MAAL,IAAe,UAA5C,gBAAyD,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMhB,YAAY,CAACM,UAAU,CAACW,GAAZ,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAzD,GAA8H,EAA3K,CAA5D,CANJ,CADY,CADhB,CAXJ,CADJ,CADJ,CADJ,CADC,GA+BC,oCAjCN,CADJ;AAqCH;;AAED,eAAejC,cAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport NavbarApplicant from '../templates/NavbarApplicant';\r\nimport GetUser from \"../../context/getUser\"\r\n\r\nfunction MyApplications(props) {\r\n\r\n    const user = GetUser()\r\n    const [fetchedJobs, setJobs] = useState([]);\r\n\r\n    axios.post('http://localhost:4000/job/getJobs', { jobIds: user.jobsApplied })\r\n        .then(res => {\r\n            setJobs(res.data.jobs);\r\n        })\r\n        .catch(function(error) {\r\n            console.log(error);\r\n        })\r\n\r\n    function submitRating(jobId) {\r\n        props.history.push('/rate-job/'+jobId);\r\n    }   \r\n\r\n    return (\r\n        <div class=\"container\">\r\n            <NavbarApplicant /> <br />\r\n            {user.jobsApplied && user.jobsApplied.length !== 0 ?\r\n            <Grid container>\r\n                <Grid item xs={12} md={12} lg={12}>\r\n                    <Paper>\r\n                        <Table size=\"large\">\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                        <TableCell>Title</TableCell>\r\n                                        <TableCell>Date of Joining</TableCell>\r\n                                        <TableCell>Salary (per month)</TableCell>\r\n                                        <TableCell>Recruiter Name</TableCell>\r\n                                        <TableCell>Job Status</TableCell>\r\n                                        <TableCell>Rate Job</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                            {fetchedJobs && fetchedJobs.map((fetchedJob, ind) => (   \r\n                                <TableRow key={ind}>\r\n                                    <TableCell> {fetchedJob ? fetchedJob.title : \"\"} </TableCell>\r\n                                    <TableCell> {fetchedJob && fetchedJob.receivedApplicants && fetchedJob.receivedApplicants.map((bJob) => (bJob.email === user.email ? bJob.dateOfJoining && bJob.dateOfJoining.split(\"T\")[0] : \"\"))} </TableCell>\r\n                                    <TableCell> {fetchedJob ? fetchedJob.salary : \"\"} </TableCell>\r\n                                    <TableCell> {fetchedJob ? fetchedJob.name : \"\"} </TableCell>\r\n                                    <TableCell> {fetchedJob && fetchedJob.receivedApplicants && fetchedJob.receivedApplicants.map((bJob) => (bJob.email === user.email ? bJob.status : \"\"))} </TableCell>\r\n                                    <TableCell> {fetchedJob && fetchedJob.receivedApplicants && fetchedJob.receivedApplicants.map((bJob) => (bJob.email === user.email && bJob.status == \"Accepted\" ? <Button onClick={() => submitRating(fetchedJob._id)}>Rate</Button> : \"\"))}</TableCell>\r\n                                </TableRow>  \r\n                            ))}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </Paper>               \r\n                </Grid>    \r\n            </Grid>\r\n            : \"You have no applications currently\"}            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyApplications;"]},"metadata":{},"sourceType":"module"}