{"ast":null,"code":"var _jsxFileName = \"C:\\\\ECHO\\\\MERNSTACK\\\\Job_portal_Mern\\\\Job-Application-Portal\\\\frontend\\\\src\\\\context\\\\auth.js\";\nimport React, { useReducer, createContext } from 'react';\nimport jwtDecode from 'jwt-decode';\nconst initialState = {\n  user: null\n};\n\nif (localStorage.getItem('token')) {\n  const decodedToken = jwtDecode(localStorage.getItem('token'));\n\n  if (decodedToken.exp * 1000 < Date.now()) {\n    localStorage.removeItem('token');\n  } else {\n    initialState.user = decodedToken;\n  }\n}\n\nconst AuthContext = createContext({\n  user: null,\n  login: userData => {},\n  logout: () => {}\n});\n\nfunction authReducer(state, action) {\n  switch (action.type) {\n    case 'LOGIN':\n      return { ...state,\n        user: action.payload\n      };\n\n    case 'LOGOUT':\n      return { ...state,\n        user: null\n      };\n\n    default:\n      return state;\n  }\n}\n\nfunction AuthProvider(props) {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  function login(userData) {\n    localStorage.setItem('token', userData.token);\n    dispatch({\n      type: 'LOGIN',\n      payload: userData\n    });\n  }\n\n  function logout() {\n    localStorage.removeItem('token');\n    dispatch({\n      type: 'LOGOUT'\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, Object.assign({\n    value: {\n      user: state.user,\n      login,\n      logout\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 3\n    }\n  }));\n}\n\nexport { AuthContext, AuthProvider };","map":{"version":3,"sources":["C:/ECHO/MERNSTACK/Job_portal_Mern/Job-Application-Portal/frontend/src/context/auth.js"],"names":["React","useReducer","createContext","jwtDecode","initialState","user","localStorage","getItem","decodedToken","exp","Date","now","removeItem","AuthContext","login","userData","logout","authReducer","state","action","type","payload","AuthProvider","props","dispatch","setItem","token"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,QAAiD,OAAjD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,YAAY,GAAG;AACpBC,EAAAA,IAAI,EAAE;AADc,CAArB;;AAIA,IAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAH,EACA;AACC,QAAMC,YAAY,GAAGL,SAAS,CAACG,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAA9B;;AAEA,MAAGC,YAAY,CAACC,GAAb,GAAmB,IAAnB,GAA0BC,IAAI,CAACC,GAAL,EAA7B,EACA;AACCL,IAAAA,YAAY,CAACM,UAAb,CAAwB,OAAxB;AACA,GAHD,MAKA;AACCR,IAAAA,YAAY,CAACC,IAAb,GAAoBG,YAApB;AACA;AACD;;AAED,MAAMK,WAAW,GAAGX,aAAa,CAAC;AACjCG,EAAAA,IAAI,EAAE,IAD2B;AAEjCS,EAAAA,KAAK,EAAGC,QAAD,IAAc,CAAE,CAFU;AAGjCC,EAAAA,MAAM,EAAE,MAAM,CAAE;AAHiB,CAAD,CAAjC;;AAMA,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAmC;AAClC,UAAOA,MAAM,CAACC,IAAd;AACC,SAAK,OAAL;AACC,aAAM,EACL,GAAGF,KADE;AAELb,QAAAA,IAAI,EAAEc,MAAM,CAACE;AAFR,OAAN;;AAID,SAAK,QAAL;AACC,aAAM,EACL,GAAGH,KADE;AAELb,QAAAA,IAAI,EAAE;AAFD,OAAN;;AAID;AACC,aAAOa,KAAP;AAZF;AAcA;;AAED,SAASI,YAAT,CAAsBC,KAAtB,EAA4B;AAC3B,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBvB,UAAU,CAACgB,WAAD,EAAcb,YAAd,CAApC;;AAEA,WAASU,KAAT,CAAeC,QAAf,EAAwB;AACvBT,IAAAA,YAAY,CAACmB,OAAb,CAAqB,OAArB,EAA8BV,QAAQ,CAACW,KAAvC;AACAF,IAAAA,QAAQ,CAAC;AACRJ,MAAAA,IAAI,EAAE,OADE;AAERC,MAAAA,OAAO,EAAEN;AAFD,KAAD,CAAR;AAIA;;AAED,WAASC,MAAT,GAAiB;AAChBV,IAAAA,YAAY,CAACM,UAAb,CAAwB,OAAxB;AACAY,IAAAA,QAAQ,CAAC;AACRJ,MAAAA,IAAI,EAAE;AADE,KAAD,CAAR;AAGA;;AAED,sBACC,oBAAC,WAAD,CAAa,QAAb;AACC,IAAA,KAAK,EAAE;AAAEf,MAAAA,IAAI,EAAEa,KAAK,CAACb,IAAd;AAAoBS,MAAAA,KAApB;AAA2BE,MAAAA;AAA3B;AADR,KAEKO,KAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD;AAMA;;AAED,SAASV,WAAT,EAAsBS,YAAtB","sourcesContent":["import React, { useReducer, createContext } from 'react';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst initialState = {\r\n\tuser: null\r\n}\r\n\r\nif(localStorage.getItem('token'))\r\n{\r\n\tconst decodedToken = jwtDecode(localStorage.getItem('token'));\r\n\r\n\tif(decodedToken.exp * 1000 < Date.now())\r\n\t{\r\n\t\tlocalStorage.removeItem('token');\r\n\t}\r\n\telse\r\n\t{\r\n\t\tinitialState.user = decodedToken;\r\n\t}\r\n}\r\n\r\nconst AuthContext = createContext({\r\n\tuser: null,\r\n\tlogin: (userData) => {},\r\n\tlogout: () => {}\r\n})\r\n\r\nfunction authReducer(state, action){\r\n\tswitch(action.type){\r\n\t\tcase 'LOGIN':\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tuser: action.payload\r\n\t\t\t}\r\n\t\tcase 'LOGOUT':\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tuser: null\r\n\t\t\t}\r\n\t\tdefault: \r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\nfunction AuthProvider(props){\r\n\tconst [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n\tfunction login(userData){\r\n\t\tlocalStorage.setItem('token', userData.token)\r\n\t\tdispatch({\r\n\t\t\ttype: 'LOGIN',\r\n\t\t\tpayload: userData\r\n\t\t})\r\n\t}\r\n\r\n\tfunction logout(){\r\n\t\tlocalStorage.removeItem('token');\r\n\t\tdispatch({ \r\n\t\t\ttype: 'LOGOUT'\r\n\t\t});\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AuthContext.Provider\r\n\t\t\tvalue={{ user: state.user, login, logout }}\r\n\t\t\t{...props}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport { AuthContext, AuthProvider }"]},"metadata":{},"sourceType":"module"}