{"ast":null,"code":"var _jsxFileName = \"C:\\\\ECHO\\\\MERNSTACK\\\\New folder\\\\Job-Application-Portal\\\\frontend\\\\src\\\\components\\\\Applicants\\\\ApplyJob.js\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport GetUser from '../../context/getUser';\nimport NavbarApplicant from \"../templates/NavbarApplicant\";\n\nfunction ApplyJob(props) {\n  const user = GetUser();\n  const [sop, setSOP] = useState('');\n\n  async function onChangeSOP(event) {\n    await setSOP(event.target.value);\n  }\n\n  if (sop.split(\" \").length > 250) {\n    alert(\"SOP must be less than 250 words\");\n    setSOP(\"\");\n  }\n\n  function onSubmit(e) {\n    e.preventDefault();\n    const job = {\n      _id: user._id,\n      email: user.email,\n      sop: sop\n    };\n    const updatedUser = {\n      _id: props.match.params.jobId\n    };\n    axios.post('http://localhost:4000/job/addApp/' + props.match.params.jobId, job).then(res => {\n      console.log(\"Applied!\"); // props.history.push('/applications')\n    }).catch(err => {\n      alert(err.response.data.error);\n    });\n    axios.post('http://localhost:4000/user/addJob/' + user._id, updatedUser).then(res => {\n      alert(\"Applied!\");\n      props.history.push('/applications');\n    }).catch(err => {\n      alert(err.response.data.error);\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(NavbarApplicant, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 32\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"u\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \" Apply \")), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, \"SOP: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    value: sop,\n    onChange: onChangeSOP,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }))));\n}\n\nexport default ApplyJob;","map":{"version":3,"sources":["C:/ECHO/MERNSTACK/New folder/Job-Application-Portal/frontend/src/components/Applicants/ApplyJob.js"],"names":["React","useState","axios","GetUser","NavbarApplicant","ApplyJob","props","user","sop","setSOP","onChangeSOP","event","target","value","split","length","alert","onSubmit","e","preventDefault","job","_id","email","updatedUser","match","params","jobId","post","then","res","console","log","catch","err","response","data","error","history","push"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport GetUser from '../../context/getUser'\r\nimport NavbarApplicant from \"../templates/NavbarApplicant\"\r\n\r\nfunction ApplyJob(props) {\r\n\r\n    const user = GetUser()\r\n    \r\n    const [sop, setSOP] = useState('');\r\n\r\n    async function onChangeSOP(event) {\r\n        await setSOP(event.target.value);\r\n    }\r\n\r\n    if(sop.split(\" \").length > 250)\r\n    {\r\n        alert(\"SOP must be less than 250 words\");\r\n        setSOP(\"\")\r\n    }\r\n\r\n    function onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const job = {\r\n            _id: user._id,\r\n            email: user.email,\r\n            sop: sop\r\n        }\r\n\r\n        const updatedUser = {\r\n            _id: props.match.params.jobId\r\n        }\r\n\r\n        axios.post('http://localhost:4000/job/addApp/'+props.match.params.jobId, job)\r\n             .then(res => {\r\n                    console.log(\"Applied!\");\r\n                    // props.history.push('/applications')\r\n                })\r\n             .catch(err => {\r\n                    alert(err.response.data.error);\r\n                });\r\n\r\n        axios.post('http://localhost:4000/user/addJob/'+user._id, updatedUser)\r\n            .then(res => {\r\n                    alert(\"Applied!\");\r\n                    props.history.push('/applications')\r\n                })\r\n            .catch(err => {\r\n                    alert(err.response.data.error);\r\n                });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <NavbarApplicant /><br />\r\n            <h1><u> Apply </u></h1>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label>SOP: </label>\r\n                    <input type=\"text\" \r\n                            className=\"form-control\" \r\n                            value={sop}\r\n                            onChange={onChangeSOP}\r\n                            required\r\n                            />  \r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary\"/>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ApplyJob;"]},"metadata":{},"sourceType":"module"}