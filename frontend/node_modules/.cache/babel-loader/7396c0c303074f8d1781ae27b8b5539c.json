{"ast":null,"code":"var _jsxFileName = \"C:\\\\ECHO\\\\MERNSTACK\\\\Job_portal_Mern\\\\Job-Application-Portal\\\\frontend\\\\src\\\\components\\\\Recruiters\\\\ChooseJob.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport NavbarRecruiter from '../templates/NavbarRecruiter';\n\nclass ChooseJob extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {},\n      job: {},\n      sortedApplicants: [],\n      applicants: [],\n      sortRatingFlag: true,\n      sortNameFlag: true,\n      sortDateFlag: true\n    };\n    this.renderIconRating = this.renderIconRating.bind(this);\n    this.renderIconName = this.renderIconName.bind(this);\n    this.renderIconDate = this.renderIconDate.bind(this);\n    this.sortRating = this.sortRating.bind(this);\n    this.sortName = this.sortName.bind(this);\n    this.sortDate = this.sortDate.bind(this);\n    this.updateStatus = this.updateStatus.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/job/getJob/' + this.props.match.params.jobId).then(res => {\n      this.setState({\n        job: res.data\n      });\n      axios.post('http://localhost:4000/user/getApps', {\n        applicantIds: this.state.job.receivedApplicants\n      }).then(res => {\n        this.setState({\n          applicants: res.data.users,\n          sortedApplicants: res.data.users\n        });\n        console.log(res.data.users);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  updateStatus(jobId, status) {\n    const job = {\n      jobId: jobId,\n      status: status\n    };\n    axios.post('http://localhost:4000/job/updateStatus/' + this.props.match.params.jobId, job).then(res => {\n      alert(\"Applicant \" + status + \"!\");\n    }).catch(err => {\n      alert(err.response.data.error);\n      console.log(err);\n    });\n  }\n\n  sortName() {\n    var array = this.state.applicants;\n    var flag = this.state.sortNameFlag;\n    array.sort(function (a, b) {\n      if (a.name !== undefined && b.name !== undefined) {\n        if (flag) {\n          if (a.name.toLowerCase() < b.name.toLowerCase()) return 1;\n          if (a.name.toLowerCase() > b.name.toLowerCase()) return -1;\n        }\n\n        if (!flag) {\n          if (a.name.toLowerCase() < b.name.toLowerCase()) return -1;\n          if (a.name.toLowerCase() > b.name.toLowerCase()) return 1;\n        }\n      } else {\n        return 1;\n      }\n    });\n    this.setState({\n      applicants: array,\n      sortNameFlag: !this.state.sortNameFlag\n    });\n  }\n\n  sortDate() {\n    var array = this.state.job.receivedApplicants;\n    var flag = this.state.sortDateFlag;\n    array.sort(function (a, b) {\n      if (a.dateOfApplication !== undefined && b.dateOfApplication !== undefined) {\n        return (1 - flag * 2) * (new Date(a.dateOfApplication) - new Date(b.dateOfApplication));\n      } else {\n        return 1;\n      }\n    });\n    this.setState({\n      sortDateFlag: !this.state.sortDateFlag\n    });\n  }\n\n  sortRating() {\n    var array = this.state.applicants;\n    var flag = this.state.sortRatingFlag;\n    array.sort(function (a, b) {\n      if (a.rating !== undefined && b.rating !== undefined) {\n        return (1 - flag * 2) * (new Date(a.rating) - new Date(b.rating));\n      } else {\n        return 1;\n      }\n    });\n    this.setState({\n      applicants: array,\n      sortRatingFlag: !this.state.sortRatingFlag\n    });\n  }\n\n  renderIconName() {\n    if (this.state.sortNameFlag) {\n      return /*#__PURE__*/React.createElement(ArrowDownwardIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 17\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(ArrowUpwardIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 17\n        }\n      });\n    }\n  }\n\n  renderIconDate() {\n    if (this.state.sortDateFlag) {\n      return /*#__PURE__*/React.createElement(ArrowDownwardIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(ArrowUpwardIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 17\n        }\n      });\n    }\n  }\n\n  renderIconRating() {\n    if (this.state.sortRatingFlag) {\n      return /*#__PURE__*/React.createElement(ArrowDownwardIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(ArrowUpwardIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 17\n        }\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(NavbarRecruiter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 33\n      }\n    }), this.state.job.receivedApplicants && this.state.job.receivedApplicants.length !== 0 ? /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 12,\n      lg: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.sortName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 56\n      }\n    }, this.renderIconName()), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 120\n      }\n    }), \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 45\n      }\n    }, \"Skills\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.sortDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 56\n      }\n    }, this.renderIconDate()), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 120\n      }\n    }), \"Date of Application\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 45\n      }\n    }, \"Education\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 45\n      }\n    }, \"SOP\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.sortRating,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 56\n      }\n    }, this.renderIconRating()), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 124\n      }\n    }), \"Rating\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 45\n      }\n    }, \"Stage of Application\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      colSpan: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 45\n      }\n    }, \"Options\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 33\n      }\n    }, this.state.applicants && this.state.applicants.map((applicant, ind) => this.state.job.receivedApplicants[ind].status !== \"Rejected\" ? /*#__PURE__*/React.createElement(TableRow, {\n      key: ind,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 49\n      }\n    }, applicant && applicant.name), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 49\n      }\n    }, applicant.skills && applicant.skills.join(', ')), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 49\n      }\n    }, this.state.job.receivedApplicants[ind].dateOfApplication && this.state.job.receivedApplicants[ind].dateOfApplication.split(\"T\")[0]), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 49\n      }\n    }, applicant.education && applicant.education[0].institution), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 49\n      }\n    }, this.state.job.receivedApplicants[ind].sop), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 49\n      }\n    }, applicant && applicant.rating), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 49\n      }\n    }, this.state.job.receivedApplicants[ind].status), this.state.job.receivedApplicants[ind].status === \"Applied\" ? /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.updateStatus(this.state.job.receivedApplicants[ind]['id'] ? this.state.job.receivedApplicants[ind]['id'] : this.state.job.receivedApplicants[ind]['_id'], \"Shortlisted\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 61\n      }\n    }, \"Shortlist\")) : \"\", this.state.job.receivedApplicants[ind].status === \"Shortlisted\" ? /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.updateStatus(this.state.job.receivedApplicants[ind]['id'] ? this.state.job.receivedApplicants[ind]['id'] : this.state.job.receivedApplicants[ind]['_id'], \"Accepted\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 61\n      }\n    }, \"Accept\")) : \"\", this.state.job.receivedApplicants[ind].status !== \"Rejected\" ? /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.updateStatus(this.state.job.receivedApplicants[ind]['id'] ? this.state.job.receivedApplicants[ind]['id'] : this.state.job.receivedApplicants[ind]['_id'], \"Rejected\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 61\n      }\n    }, \"Reject\")) : \"\") : \"\")))))) : \"Nobody has applied for this job yet!\");\n  }\n\n}\n\nexport default ChooseJob;","map":{"version":3,"sources":["C:/ECHO/MERNSTACK/Job_portal_Mern/Job-Application-Portal/frontend/src/components/Recruiters/ChooseJob.js"],"names":["React","Component","axios","Paper","Grid","TableCell","TableHead","TableRow","Table","TableBody","Button","ArrowUpwardIcon","ArrowDownwardIcon","NavbarRecruiter","ChooseJob","constructor","props","state","user","job","sortedApplicants","applicants","sortRatingFlag","sortNameFlag","sortDateFlag","renderIconRating","bind","renderIconName","renderIconDate","sortRating","sortName","sortDate","updateStatus","componentDidMount","get","match","params","jobId","then","res","setState","data","post","applicantIds","receivedApplicants","users","console","log","catch","error","status","alert","err","response","array","flag","sort","a","b","name","undefined","toLowerCase","dateOfApplication","Date","rating","render","length","map","applicant","ind","skills","join","split","education","institution","sop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n\r\nimport NavbarRecruiter from '../templates/NavbarRecruiter';\r\n\r\nclass ChooseJob extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {},\r\n            job: {},\r\n            sortedApplicants: [],\r\n            applicants: [], \r\n            sortRatingFlag: true, \r\n            sortNameFlag: true, \r\n            sortDateFlag: true\r\n        };\r\n\r\n        this.renderIconRating = this.renderIconRating.bind(this);\r\n        this.renderIconName = this.renderIconName.bind(this);\r\n        this.renderIconDate = this.renderIconDate.bind(this);\r\n        this.sortRating = this.sortRating.bind(this);\r\n        this.sortName = this.sortName.bind(this);\r\n        this.sortDate = this.sortDate.bind(this);\r\n        this.updateStatus = this.updateStatus.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:4000/job/getJob/'+ this.props.match.params.jobId)\r\n            .then(res => {\r\n                this.setState({job: res.data});\r\n                axios.post('http://localhost:4000/user/getApps', {applicantIds: this.state.job.receivedApplicants})\r\n                    .then(res => {\r\n                        this.setState({applicants: res.data.users, sortedApplicants: res.data.users});\r\n                        console.log(res.data.users)\r\n                    })\r\n                    .catch(function(error) {\r\n                        console.log(error);\r\n                    })\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    updateStatus(jobId, status) {\r\n\r\n        const job = {\r\n            jobId: jobId,\r\n            status: status\r\n        }\r\n\r\n        axios.post('http://localhost:4000/job/updateStatus/'+ this.props.match.params.jobId, job)\r\n             .then(res => {\r\n                    alert(\"Applicant \" + status + \"!\");\r\n                })\r\n             .catch(err => {\r\n                    alert(err.response.data.error);\r\n                    console.log(err);\r\n                });\r\n    }\r\n\r\n    sortName()\r\n    {\r\n        var array = this.state.applicants;\r\n        var flag = this.state.sortNameFlag;\r\n        array.sort(function(a, b) {\r\n            if(a.name !== undefined && b.name !== undefined){\r\n                if(flag)\r\n                {\r\n                    if(a.name.toLowerCase() < b.name.toLowerCase()) return 1;\r\n                    if(a.name.toLowerCase() > b.name.toLowerCase()) return -1;\r\n                }\r\n\r\n                if(!flag)\r\n                {\r\n                    if(a.name.toLowerCase() < b.name.toLowerCase()) return -1;\r\n                    if(a.name.toLowerCase() > b.name.toLowerCase()) return 1;\r\n                }\r\n            }\r\n\r\n            else{\r\n                return 1;\r\n            }\r\n          });\r\n        \r\n        this.setState({\r\n            applicants:array,\r\n            sortNameFlag:!this.state.sortNameFlag,\r\n        })\r\n    }\r\n\r\n    sortDate()\r\n    {\r\n        var array = this.state.job.receivedApplicants;\r\n        var flag = this.state.sortDateFlag;\r\n        array.sort(function(a, b) {\r\n            if(a.dateOfApplication !== undefined && b.dateOfApplication !== undefined){\r\n                return (1 - flag*2) * (new Date(a.dateOfApplication) - new Date(b.dateOfApplication));\r\n            }\r\n            else{\r\n                return 1;\r\n            }\r\n          });\r\n\r\n        this.setState({\r\n            sortDateFlag:!this.state.sortDateFlag,\r\n        })\r\n    }\r\n\r\n    sortRating()\r\n    {\r\n        var array = this.state.applicants;\r\n        var flag = this.state.sortRatingFlag;\r\n        array.sort(function(a, b) {\r\n            if(a.rating !== undefined && b.rating !== undefined){\r\n                return (1 - flag*2) * (new Date(a.rating) - new Date(b.rating));\r\n            }\r\n            else{\r\n                return 1;\r\n            }\r\n          });\r\n        \r\n        this.setState({\r\n            applicants: array,\r\n            sortRatingFlag:!this.state.sortRatingFlag,\r\n        })\r\n    }\r\n\r\n    renderIconName()\r\n    {\r\n        if(this.state.sortNameFlag)\r\n        {\r\n            return(\r\n                <ArrowDownwardIcon/>\r\n            )\r\n        }\r\n        else\r\n        {\r\n            return(\r\n                <ArrowUpwardIcon/>\r\n            )            \r\n        }\r\n    }\r\n\r\n    renderIconDate()\r\n    {\r\n        if(this.state.sortDateFlag)\r\n        {\r\n            return(\r\n                <ArrowDownwardIcon/>\r\n            )\r\n        }\r\n        else\r\n        {\r\n            return(\r\n                <ArrowUpwardIcon/>\r\n            )            \r\n        }\r\n    }\r\n\r\n    renderIconRating()\r\n    {\r\n        if(this.state.sortRatingFlag)\r\n        {\r\n            return(\r\n                <ArrowDownwardIcon/>\r\n            )\r\n        }\r\n        else\r\n        {\r\n            return(\r\n                <ArrowUpwardIcon/>\r\n            )            \r\n        }\r\n    }\r\n\r\n    render() {\r\n    return (\r\n        <div class=\"container\">\r\n            <NavbarRecruiter /> <br />\r\n                {this.state.job.receivedApplicants && this.state.job.receivedApplicants.length !== 0 ?\r\n                <Grid container>\r\n                    <Grid item xs={12} md={12} lg={12}>\r\n                        <Paper>\r\n                            <Table size=\"small\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                            <TableCell><Button onClick={this.sortName}>{this.renderIconName()}</Button><br />Name</TableCell>\r\n                                            <TableCell>Skills</TableCell>\r\n                                            <TableCell><Button onClick={this.sortDate}>{this.renderIconDate()}</Button><br />Date of Application</TableCell>\r\n                                            <TableCell>Education</TableCell>\r\n                                            <TableCell>SOP</TableCell>\r\n                                            <TableCell><Button onClick={this.sortRating}>{this.renderIconRating()}</Button><br />Rating</TableCell>\r\n                                            <TableCell>Stage of Application</TableCell>\r\n                                            <TableCell align=\"center\" colSpan={2}>Options</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    { this.state.applicants && this.state.applicants.map((applicant, ind) => (\r\n                                            this.state.job.receivedApplicants[ind].status !== \"Rejected\" ?\r\n                                            <TableRow key={ind}>\r\n                                                <TableCell>{applicant && applicant.name}</TableCell>\r\n                                                <TableCell>{applicant.skills && applicant.skills.join(', ')}</TableCell>\r\n                                                <TableCell>{this.state.job.receivedApplicants[ind].dateOfApplication && this.state.job.receivedApplicants[ind].dateOfApplication.split(\"T\")[0]}</TableCell>\r\n                                                <TableCell>{applicant.education && applicant.education[0].institution}</TableCell>\r\n                                                <TableCell>{this.state.job.receivedApplicants[ind].sop}</TableCell>\r\n                                                <TableCell>{applicant && applicant.rating}</TableCell>\r\n                                                <TableCell>{this.state.job.receivedApplicants[ind].status}</TableCell>\r\n                                                { this.state.job.receivedApplicants[ind].status === \"Applied\" ? \r\n                                                <TableCell ><Button onClick={() => this.updateStatus(this.state.job.receivedApplicants[ind]['id'] ? this.state.job.receivedApplicants[ind]['id'] : this.state.job.receivedApplicants[ind]['_id'], \"Shortlisted\")}>Shortlist</Button></TableCell>\r\n                                                : \"\" }\r\n                                                { this.state.job.receivedApplicants[ind].status === \"Shortlisted\" ? \r\n                                                <TableCell ><Button onClick={() => this.updateStatus(this.state.job.receivedApplicants[ind]['id'] ? this.state.job.receivedApplicants[ind]['id'] : this.state.job.receivedApplicants[ind]['_id'], \"Accepted\")}>Accept</Button></TableCell>\r\n                                                : \"\" }\r\n                                                { this.state.job.receivedApplicants[ind].status !== \"Rejected\" ?\r\n                                                <TableCell ><Button onClick={() => this.updateStatus(this.state.job.receivedApplicants[ind]['id'] ? this.state.job.receivedApplicants[ind]['id'] : this.state.job.receivedApplicants[ind]['_id'], \"Rejected\")}>Reject</Button></TableCell>\r\n                                                : \"\" }    \r\n                                            </TableRow>\r\n                                            : \"\"\r\n                                        )) }\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Paper>               \r\n                    </Grid>    \r\n                </Grid>\r\n                : \"Nobody has applied for this job yet!\"}           \r\n            </div>\r\n    )}\r\n}\r\n\r\nexport default ChooseJob;"]},"metadata":{},"sourceType":"module"}