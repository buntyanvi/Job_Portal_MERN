{"ast":null,"code":"var _jsxFileName = \"C:\\\\ECHO\\\\MERNSTACK\\\\Job_portal_Mern\\\\Job-Application-Portal\\\\frontend\\\\src\\\\components\\\\Recruiters\\\\Employees.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport NavbarRecruiter from '../templates/NavbarRecruiter';\n\nclass Employees extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {},\n      jobs: [],\n      fetchedApplicant: {},\n      sortRatingFlag: true,\n      sortNameFlag: true,\n      sortDateFlag: true,\n      sortTitleFlag: true\n    };\n    this.renderIconRating = this.renderIconRating.bind(this);\n    this.renderIconName = this.renderIconName.bind(this);\n    this.renderIconDate = this.renderIconDate.bind(this);\n    this.renderIconTitle = this.renderIconTitle.bind(this);\n    this.sortRating = this.sortRating.bind(this);\n    this.sortName = this.sortName.bind(this);\n    this.sortDate = this.sortDate.bind(this);\n    this.sortTitle = this.sortTitle.bind(this);\n    this.showApp = this.showApp.bind(this);\n    this.submitRating = this.submitRating.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/job').then(response => {\n      this.setState({\n        jobs: response.data,\n        sortedJobs: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    axios.get('http://localhost:4000/user/me', {\n      headers: {\n        \"token\": localStorage.getItem(\"token\") ? localStorage.getItem(\"token\").split(\" \")[1] : \"\"\n      }\n    }).then(res => {\n      this.setState({\n        user: res.data\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  showApp(applicantId) {\n    console.log(applicantId);\n    axios.get('http://localhost:4000/user/getApp/' + applicantId).then(response => {\n      this.setState({\n        fetchedApplicant: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  sortRating() {\n    var array = this.state.jobs;\n    var flag = this.state.sortRatingFlag;\n    array.sort(function (a, b) {\n      if (a.rating !== undefined && b.rating !== undefined) {\n        return (1 - flag * 2) * (new Date(a.rating) - new Date(b.rating));\n      } else {\n        return 1;\n      }\n    });\n    this.setState({\n      jobs: array,\n      sortRatingFlag: !this.state.sortRatingFlag\n    });\n  }\n\n  sortName() {\n    var array = this.state.jobs;\n    var flag = this.state.sortNameFlag;\n    array.sort(function (a, b) {\n      if (a.name !== undefined && b.name !== undefined) {\n        return (1 - flag * 2) * (new Date(a.name) - new Date(b.name));\n      } else {\n        return 1;\n      }\n    });\n    this.setState({\n      jobs: array,\n      sortNameFlag: !this.state.sortNameFlag\n    });\n  }\n\n  sortTitle() {\n    var array = this.state.jobs;\n    var flag = this.state.sortTitleFlag;\n    array.sort(function (a, b) {\n      if (a.title !== undefined && b.title !== undefined) {\n        return (1 - flag * 2) * (new Date(a.title) - new Date(b.title));\n      } else {\n        return 1;\n      }\n    });\n    this.setState({\n      jobs: array,\n      sortTitleFlag: !this.state.sortTitleFlag\n    });\n  }\n\n  sortDate() {\n    var array = this.state.jobs;\n    var flag = this.state.sortDateFlag;\n    array.sort(function (a, b) {\n      if (a.dateOfJoining !== undefined && b.dateOfJoining !== undefined) {\n        return (1 - flag * 2) * (new Date(a.dateOfJoining) - new Date(b.dateOfJoining));\n      } else {\n        return 1;\n      }\n    });\n    this.setState({\n      jobs: array,\n      sortDateFlag: !this.state.sortDateFlag\n    });\n  }\n\n  renderIconRating() {\n    if (this.state.sortRatingFlag) {\n      return /*#__PURE__*/React.createElement(ArrowDownwardIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(ArrowUpwardIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 17\n        }\n      });\n    }\n  }\n\n  renderIconName() {\n    if (this.state.sortNameFlag) {\n      return /*#__PURE__*/React.createElement(ArrowDownwardIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(ArrowUpwardIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 17\n        }\n      });\n    }\n  }\n\n  renderIconTitle() {\n    if (this.state.sortTitleFlag) {\n      return /*#__PURE__*/React.createElement(ArrowDownwardIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 17\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(ArrowUpwardIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 17\n        }\n      });\n    }\n  }\n\n  renderIconDate() {\n    if (this.state.sortDateFlag) {\n      return /*#__PURE__*/React.createElement(ArrowDownwardIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(ArrowUpwardIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 17\n        }\n      });\n    }\n  }\n\n  submitRating(userId) {\n    this.props.history.push('/rate-employee/' + userId);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavbarRecruiter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 12,\n      lg: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      size: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.sortName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 56\n      }\n    }, this.renderIconName()), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 120\n      }\n    }), \"Employee Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.sortDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 56\n      }\n    }, this.renderIconDate()), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 120\n      }\n    }), \"Date of Joining\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 45\n      }\n    }, \"Job Type\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.sortTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 56\n      }\n    }, this.renderIconTitle()), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 122\n      }\n    }), \"Job Title\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.sortRating,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 56\n      }\n    }, this.renderIconRating()), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 124\n      }\n    }), \"Rating\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 45\n      }\n    }, \"Rate Employee\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 33\n      }\n    }, this.state.jobs && this.state.jobs.map(job => job.email == this.state.user.email && job.receivedApplicants && job.receivedApplicants.map((app, ind) => app.status == \"Accepted\" ? /*#__PURE__*/React.createElement(TableRow, {\n      key: ind,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 41\n      }\n    }, this.showApp(app._id), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 45\n      }\n    }, \" \", this.state.fetchedApplicant ? this.state.fetchedApplicant.name : \"\", \" \"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 45\n      }\n    }, \" \", app.dateOfJoining && app.dateOfJoining.split(\"T\")[0], \" \"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 45\n      }\n    }, \" \", job.typeOfJob, \" \"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 45\n      }\n    }, \" \", job.title, \" \"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 45\n      }\n    }, \" \", this.state.fetchedApplicant ? this.state.fetchedApplicant.rating : \"\", \" \"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 45\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.submitRating(this.state.fetchedApplicant._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 57\n      }\n    }, \"Rate\"), \" \")) : \"\"))))))));\n  }\n\n}\n\nexport default Employees;","map":{"version":3,"sources":["C:/ECHO/MERNSTACK/Job_portal_Mern/Job-Application-Portal/frontend/src/components/Recruiters/Employees.js"],"names":["React","Component","axios","Paper","Grid","TableCell","TableHead","TableRow","Table","TableBody","Button","ArrowUpwardIcon","ArrowDownwardIcon","NavbarRecruiter","Employees","constructor","props","state","user","jobs","fetchedApplicant","sortRatingFlag","sortNameFlag","sortDateFlag","sortTitleFlag","renderIconRating","bind","renderIconName","renderIconDate","renderIconTitle","sortRating","sortName","sortDate","sortTitle","showApp","submitRating","componentDidMount","get","then","response","setState","data","sortedJobs","catch","error","console","log","headers","localStorage","getItem","split","res","err","applicantId","array","flag","sort","a","b","rating","undefined","Date","name","title","dateOfJoining","userId","history","push","render","map","job","email","receivedApplicants","app","ind","status","_id","typeOfJob"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AAEA,OAAOC,eAAP,MAA4B,8BAA5B;;AAEA,MAAMC,SAAN,SAAwBb,SAAxB,CAAkC;AAE9Bc,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,IAAI,EAAE,EAFG;AAGTC,MAAAA,gBAAgB,EAAE,EAHT;AAITC,MAAAA,cAAc,EAAC,IAJN;AAKTC,MAAAA,YAAY,EAAE,IALL;AAMTC,MAAAA,YAAY,EAAE,IANL;AAOTC,MAAAA,aAAa,EAAE;AAPN,KAAb;AAUA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKE,cAAL,GAAsB,KAAKA,cAAL,CAAoBF,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKG,eAAL,GAAuB,KAAKA,eAAL,CAAqBH,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKI,UAAL,GAAkB,KAAKA,UAAL,CAAgBJ,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKK,QAAL,GAAgB,KAAKA,QAAL,CAAcL,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKM,QAAL,GAAgB,KAAKA,QAAL,CAAcN,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKO,SAAL,GAAiB,KAAKA,SAAL,CAAeP,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKQ,OAAL,GAAe,KAAKA,OAAL,CAAaR,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKS,YAAL,GAAoB,KAAKA,YAAL,CAAkBT,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDU,EAAAA,iBAAiB,GAAG;AAChBlC,IAAAA,KAAK,CAACmC,GAAN,CAAU,2BAAV,EACMC,IADN,CACWC,QAAQ,IAAI;AACd,WAAKC,QAAL,CAAc;AAACrB,QAAAA,IAAI,EAAEoB,QAAQ,CAACE,IAAhB;AAAsBC,QAAAA,UAAU,EAACH,QAAQ,CAACE;AAA1C,OAAd;AACH,KAHN,EAIME,KAJN,CAIY,UAASC,KAAT,EAAgB;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KANN;AAQA1C,IAAAA,KAAK,CAACmC,GAAN,CAAU,+BAAV,EAA2C;AACvCU,MAAAA,OAAO,EAAE;AACL,iBAASC,YAAY,CAACC,OAAb,CAAqB,OAArB,IAAgCD,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,KAA9B,CAAoC,GAApC,EAAyC,CAAzC,CAAhC,GAA8E;AADlF;AAD8B,KAA3C,EAGQZ,IAHR,CAGaa,GAAG,IAAI;AACZ,WAAKX,QAAL,CAAc;AAACtB,QAAAA,IAAI,EAAEiC,GAAG,CAACV;AAAX,OAAd;AACH,KALL,EAKOE,KALP,CAKaS,GAAG,IAAI;AAACP,MAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AAAiB,KALtC;AAMH;;AAEDlB,EAAAA,OAAO,CAACmB,WAAD,EACP;AACIR,IAAAA,OAAO,CAACC,GAAR,CAAYO,WAAZ;AAEAnD,IAAAA,KAAK,CAACmC,GAAN,CAAU,uCAAsCgB,WAAhD,EACKf,IADL,CACUC,QAAQ,IAAI;AACd,WAAKC,QAAL,CAAc;AAACpB,QAAAA,gBAAgB,EAAEmB,QAAQ,CAACE;AAA5B,OAAd;AACH,KAHL,EAIKE,KAJL,CAIW,UAASC,KAAT,EAAgB;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KANL;AAOH;;AAEDd,EAAAA,UAAU,GACV;AACI,QAAIwB,KAAK,GAAG,KAAKrC,KAAL,CAAWE,IAAvB;AACA,QAAIoC,IAAI,GAAG,KAAKtC,KAAL,CAAWI,cAAtB;AACAiC,IAAAA,KAAK,CAACE,IAAN,CAAW,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACtB,UAAGD,CAAC,CAACE,MAAF,KAAaC,SAAb,IAA0BF,CAAC,CAACC,MAAF,KAAaC,SAA1C,EAAoD;AAChD,eAAO,CAAC,IAAIL,IAAI,GAAC,CAAV,KAAgB,IAAIM,IAAJ,CAASJ,CAAC,CAACE,MAAX,IAAqB,IAAIE,IAAJ,CAASH,CAAC,CAACC,MAAX,CAArC,CAAP;AACH,OAFD,MAGI;AACA,eAAO,CAAP;AACH;AACF,KAPH;AAQA,SAAKnB,QAAL,CAAc;AACVrB,MAAAA,IAAI,EAACmC,KADK;AAEVjC,MAAAA,cAAc,EAAC,CAAC,KAAKJ,KAAL,CAAWI;AAFjB,KAAd;AAIH;;AAEDU,EAAAA,QAAQ,GACR;AACI,QAAIuB,KAAK,GAAG,KAAKrC,KAAL,CAAWE,IAAvB;AACA,QAAIoC,IAAI,GAAG,KAAKtC,KAAL,CAAWK,YAAtB;AACAgC,IAAAA,KAAK,CAACE,IAAN,CAAW,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACtB,UAAGD,CAAC,CAACK,IAAF,KAAWF,SAAX,IAAwBF,CAAC,CAACI,IAAF,KAAWF,SAAtC,EAAgD;AAC5C,eAAO,CAAC,IAAIL,IAAI,GAAC,CAAV,KAAgB,IAAIM,IAAJ,CAASJ,CAAC,CAACK,IAAX,IAAmB,IAAID,IAAJ,CAASH,CAAC,CAACI,IAAX,CAAnC,CAAP;AACH,OAFD,MAGI;AACA,eAAO,CAAP;AACH;AACF,KAPH;AAQA,SAAKtB,QAAL,CAAc;AACVrB,MAAAA,IAAI,EAACmC,KADK;AAEVhC,MAAAA,YAAY,EAAC,CAAC,KAAKL,KAAL,CAAWK;AAFf,KAAd;AAIH;;AAEDW,EAAAA,SAAS,GACT;AACI,QAAIqB,KAAK,GAAG,KAAKrC,KAAL,CAAWE,IAAvB;AACA,QAAIoC,IAAI,GAAG,KAAKtC,KAAL,CAAWO,aAAtB;AACA8B,IAAAA,KAAK,CAACE,IAAN,CAAW,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACtB,UAAGD,CAAC,CAACM,KAAF,KAAYH,SAAZ,IAAyBF,CAAC,CAACK,KAAF,KAAYH,SAAxC,EAAkD;AAC9C,eAAO,CAAC,IAAIL,IAAI,GAAC,CAAV,KAAgB,IAAIM,IAAJ,CAASJ,CAAC,CAACM,KAAX,IAAoB,IAAIF,IAAJ,CAASH,CAAC,CAACK,KAAX,CAApC,CAAP;AACH,OAFD,MAGI;AACA,eAAO,CAAP;AACH;AACF,KAPH;AAQA,SAAKvB,QAAL,CAAc;AACVrB,MAAAA,IAAI,EAACmC,KADK;AAEV9B,MAAAA,aAAa,EAAC,CAAC,KAAKP,KAAL,CAAWO;AAFhB,KAAd;AAIH;;AAEDQ,EAAAA,QAAQ,GACR;AACI,QAAIsB,KAAK,GAAG,KAAKrC,KAAL,CAAWE,IAAvB;AACA,QAAIoC,IAAI,GAAG,KAAKtC,KAAL,CAAWM,YAAtB;AACA+B,IAAAA,KAAK,CAACE,IAAN,CAAW,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACtB,UAAGD,CAAC,CAACO,aAAF,KAAoBJ,SAApB,IAAiCF,CAAC,CAACM,aAAF,KAAoBJ,SAAxD,EAAkE;AAC9D,eAAO,CAAC,IAAIL,IAAI,GAAC,CAAV,KAAgB,IAAIM,IAAJ,CAASJ,CAAC,CAACO,aAAX,IAA4B,IAAIH,IAAJ,CAASH,CAAC,CAACM,aAAX,CAA5C,CAAP;AACH,OAFD,MAGI;AACA,eAAO,CAAP;AACH;AACF,KAPH;AAQA,SAAKxB,QAAL,CAAc;AACVrB,MAAAA,IAAI,EAACmC,KADK;AAEV/B,MAAAA,YAAY,EAAC,CAAC,KAAKN,KAAL,CAAWM;AAFf,KAAd;AAIH;;AAEDE,EAAAA,gBAAgB,GAChB;AACI,QAAG,KAAKR,KAAL,CAAWI,cAAd,EACA;AACI,0BACI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KALD,MAOA;AACI,0BACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;AACJ;;AAEDM,EAAAA,cAAc,GACd;AACI,QAAG,KAAKV,KAAL,CAAWK,YAAd,EACA;AACI,0BACI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KALD,MAOA;AACI,0BACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;AACJ;;AAEDO,EAAAA,eAAe,GACf;AACI,QAAG,KAAKZ,KAAL,CAAWO,aAAd,EACA;AACI,0BACI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KALD,MAOA;AACI,0BACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;AACJ;;AAEDI,EAAAA,cAAc,GACd;AACI,QAAG,KAAKX,KAAL,CAAWM,YAAd,EACA;AACI,0BACI,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH,KALD,MAOA;AACI,0BACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;AACJ;;AAEDY,EAAAA,YAAY,CAAC8B,MAAD,EAAS;AACjB,SAAKjD,KAAL,CAAWkD,OAAX,CAAmBC,IAAnB,CAAwB,oBAAkBF,MAA1C;AACH;;AAEDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,oBACwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADxB,eAII,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,EAAvB;AAA2B,MAAA,EAAE,EAAE,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAW,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKrC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC,KAAKJ,cAAL,EAAjC,CAAX,eAA2E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3E,kBADR,eAEQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAW,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKK,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiC,KAAKJ,cAAL,EAAjC,CAAX,eAA2E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA3E,oBAFR,eAGQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHR,eAIQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAW,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKK,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkC,KAAKJ,eAAL,EAAlC,CAAX,eAA6E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA7E,cAJR,eAKQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAW,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKC,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmC,KAAKL,gBAAL,EAAnC,CAAX,eAA+E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/E,WALR,eAMQ,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANR,CADJ,CADJ,eAWI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKR,KAAL,CAAWE,IAAX,IAAmB,KAAKF,KAAL,CAAWE,IAAX,CAAgBkD,GAAhB,CAAqBC,GAAD,IACpCA,GAAG,CAACC,KAAJ,IAAa,KAAKtD,KAAL,CAAWC,IAAX,CAAgBqD,KAA7B,IAAsCD,GAAG,CAACE,kBAA1C,IAAgEF,GAAG,CAACE,kBAAJ,CAAuBH,GAAvB,CAA2B,CAACI,GAAD,EAAMC,GAAN,KAC3FD,GAAG,CAACE,MAAJ,IAAc,UAAd,gBACA,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAED,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKxC,OAAL,CAAauC,GAAG,CAACG,GAAjB,CADL,eAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAa,KAAK3D,KAAL,CAAWG,gBAAX,GAA8B,KAAKH,KAAL,CAAWG,gBAAX,CAA4B0C,IAA1D,GAAiE,EAA9E,MAFJ,eAGI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAaW,GAAG,CAACT,aAAJ,IAAqBS,GAAG,CAACT,aAAJ,CAAkBd,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CAAlC,MAHJ,eAII,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAaoB,GAAG,CAACO,SAAjB,MAJJ,eAKI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAaP,GAAG,CAACP,KAAjB,MALJ,eAMI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAa,KAAK9C,KAAL,CAAWG,gBAAX,GAA8B,KAAKH,KAAL,CAAWG,gBAAX,CAA4BuC,MAA1D,GAAmE,EAAhF,MANJ,eAOI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAY,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKxB,YAAL,CAAkB,KAAKlB,KAAL,CAAWG,gBAAX,CAA4BwD,GAA9C,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAZ,MAPJ,CADA,GAUE,EAX8D,CADhD,CADxB,CAXJ,CADJ,CADJ,CADJ,CAJJ,CADJ;AA0CH;;AA/O6B;;AAkPlC,eAAe9D,SAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n\r\nimport NavbarRecruiter from '../templates/NavbarRecruiter';\r\n\r\nclass Employees extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {},\r\n            jobs: [],\r\n            fetchedApplicant: {},\r\n            sortRatingFlag:true, \r\n            sortNameFlag: true, \r\n            sortDateFlag: true,\r\n            sortTitleFlag: true\r\n        };\r\n\r\n        this.renderIconRating = this.renderIconRating.bind(this);\r\n        this.renderIconName = this.renderIconName.bind(this);\r\n        this.renderIconDate = this.renderIconDate.bind(this);\r\n        this.renderIconTitle = this.renderIconTitle.bind(this);\r\n        this.sortRating = this.sortRating.bind(this);\r\n        this.sortName = this.sortName.bind(this);\r\n        this.sortDate = this.sortDate.bind(this);\r\n        this.sortTitle = this.sortTitle.bind(this);\r\n        this.showApp = this.showApp.bind(this);\r\n        this.submitRating = this.submitRating.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n        axios.get('http://localhost:4000/job')\r\n             .then(response => {\r\n                 this.setState({jobs: response.data, sortedJobs:response.data});\r\n             })\r\n             .catch(function(error) {\r\n                 console.log(error);\r\n             })\r\n\r\n        axios.get('http://localhost:4000/user/me', { \r\n            headers: { \r\n                \"token\": localStorage.getItem(\"token\") ? localStorage.getItem(\"token\").split(\" \")[1] : \"\"\r\n            }}).then(res => {\r\n                this.setState({user: res.data});\r\n            }).catch(err => {console.log(err)})\r\n    }\r\n\r\n    showApp(applicantId)\r\n    {\r\n        console.log(applicantId);\r\n\r\n        axios.get('http://localhost:4000/user/getApp/'+ applicantId)\r\n            .then(response => {\r\n                this.setState({fetchedApplicant: response.data});\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    sortRating()\r\n    {\r\n        var array = this.state.jobs;\r\n        var flag = this.state.sortRatingFlag;\r\n        array.sort(function(a, b) {\r\n            if(a.rating !== undefined && b.rating !== undefined){\r\n                return (1 - flag*2) * (new Date(a.rating) - new Date(b.rating));\r\n            }\r\n            else{\r\n                return 1;\r\n            }\r\n          });\r\n        this.setState({\r\n            jobs:array,\r\n            sortRatingFlag:!this.state.sortRatingFlag,\r\n        })\r\n    }\r\n\r\n    sortName()\r\n    {\r\n        var array = this.state.jobs;\r\n        var flag = this.state.sortNameFlag;\r\n        array.sort(function(a, b) {\r\n            if(a.name !== undefined && b.name !== undefined){\r\n                return (1 - flag*2) * (new Date(a.name) - new Date(b.name));\r\n            }\r\n            else{\r\n                return 1;\r\n            }\r\n          });\r\n        this.setState({\r\n            jobs:array,\r\n            sortNameFlag:!this.state.sortNameFlag,\r\n        })\r\n    }\r\n\r\n    sortTitle()\r\n    {\r\n        var array = this.state.jobs;\r\n        var flag = this.state.sortTitleFlag;\r\n        array.sort(function(a, b) {\r\n            if(a.title !== undefined && b.title !== undefined){\r\n                return (1 - flag*2) * (new Date(a.title) - new Date(b.title));\r\n            }\r\n            else{\r\n                return 1;\r\n            }\r\n          });\r\n        this.setState({\r\n            jobs:array,\r\n            sortTitleFlag:!this.state.sortTitleFlag,\r\n        })\r\n    }\r\n\r\n    sortDate()\r\n    {\r\n        var array = this.state.jobs;\r\n        var flag = this.state.sortDateFlag;\r\n        array.sort(function(a, b) {\r\n            if(a.dateOfJoining !== undefined && b.dateOfJoining !== undefined){\r\n                return (1 - flag*2) * (new Date(a.dateOfJoining) - new Date(b.dateOfJoining));\r\n            }\r\n            else{\r\n                return 1;\r\n            }\r\n          });\r\n        this.setState({\r\n            jobs:array,\r\n            sortDateFlag:!this.state.sortDateFlag,\r\n        })\r\n    }\r\n\r\n    renderIconRating()\r\n    {\r\n        if(this.state.sortRatingFlag)\r\n        {\r\n            return(\r\n                <ArrowDownwardIcon/>\r\n            )\r\n        }\r\n        else\r\n        {\r\n            return(\r\n                <ArrowUpwardIcon/>\r\n            )            \r\n        }\r\n    }\r\n\r\n    renderIconName()\r\n    {\r\n        if(this.state.sortNameFlag)\r\n        {\r\n            return(\r\n                <ArrowDownwardIcon/>\r\n            )\r\n        }\r\n        else\r\n        {\r\n            return(\r\n                <ArrowUpwardIcon/>\r\n            )            \r\n        }\r\n    }\r\n\r\n    renderIconTitle()\r\n    {\r\n        if(this.state.sortTitleFlag)\r\n        {\r\n            return(\r\n                <ArrowDownwardIcon/>\r\n            )\r\n        }\r\n        else\r\n        {\r\n            return(\r\n                <ArrowUpwardIcon/>\r\n            )            \r\n        }\r\n    }\r\n\r\n    renderIconDate()\r\n    {\r\n        if(this.state.sortDateFlag)\r\n        {\r\n            return(\r\n                <ArrowDownwardIcon/>\r\n            )\r\n        }\r\n        else\r\n        {\r\n            return(\r\n                <ArrowUpwardIcon/>\r\n            )            \r\n        }\r\n    }\r\n\r\n    submitRating(userId) {\r\n        this.props.history.push('/rate-employee/'+userId);\r\n    }  \r\n\r\n    render() {\r\n        return (\r\n            <div class=\"container\">\r\n                <NavbarRecruiter /> <br />\r\n                \r\n                \r\n                <Grid container>\r\n                    <Grid item xs={12} md={12} lg={12}>\r\n                        <Paper>\r\n                            <Table size=\"large\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                            <TableCell><Button onClick={this.sortName}>{this.renderIconName()}</Button><br />Employee Name</TableCell>\r\n                                            <TableCell><Button onClick={this.sortDate}>{this.renderIconDate()}</Button><br />Date of Joining</TableCell>\r\n                                            <TableCell>Job Type</TableCell>\r\n                                            <TableCell><Button onClick={this.sortTitle}>{this.renderIconTitle()}</Button><br />Job Title</TableCell>\r\n                                            <TableCell><Button onClick={this.sortRating}>{this.renderIconRating()}</Button><br />Rating</TableCell>\r\n                                            <TableCell>Rate Employee</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {this.state.jobs && this.state.jobs.map((job) => (\r\n                                        job.email == this.state.user.email && job.receivedApplicants && job.receivedApplicants.map((app, ind) => (\r\n                                        app.status == \"Accepted\" ?\r\n                                        <TableRow key={ind}>\r\n                                            {this.showApp(app._id)}\r\n                                            <TableCell> {this.state.fetchedApplicant ? this.state.fetchedApplicant.name : \"\"} </TableCell>\r\n                                            <TableCell> {app.dateOfJoining && app.dateOfJoining.split(\"T\")[0]} </TableCell>\r\n                                            <TableCell> {job.typeOfJob} </TableCell>\r\n                                            <TableCell> {job.title} </TableCell>\r\n                                            <TableCell> {this.state.fetchedApplicant ? this.state.fetchedApplicant.rating : \"\"} </TableCell>\r\n                                            <TableCell> <Button onClick={() => this.submitRating(this.state.fetchedApplicant._id)}>Rate</Button> </TableCell>\r\n                                        </TableRow>\r\n                                        : \"\"\r\n                                    ))))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Paper>               \r\n                    </Grid>    \r\n                </Grid>\r\n                           \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Employees;"]},"metadata":{},"sourceType":"module"}