{"ast":null,"code":"var _jsxFileName = \"C:\\\\ECHO\\\\MERNSTACK\\\\New folder\\\\Job-Application-Portal\\\\frontend\\\\src\\\\components\\\\Recruiters\\\\MyListings.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport NavbarRecruiter from '../templates/NavbarRecruiter';\n\nclass MyListings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {},\n      jobs: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:4000/user/me', {\n      headers: {\n        \"token\": localStorage.getItem(\"token\") ? localStorage.getItem(\"token\").split(\" \")[1] : \"\"\n      }\n    }).then(res => {\n      this.setState({\n        user: res.data\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n    axios.get('http://localhost:4000/job').then(response => {\n      this.setState({\n        jobs: response.data\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  chooseJob(jobId) {\n    this.props.history.push('/choose-job/' + jobId);\n  }\n\n  editJob(jobId) {\n    this.props.history.push('/edit-job/' + jobId);\n  }\n\n  deleteJob(jobId) {\n    axios.post('http://localhost:4000/job/deleteJob/' + jobId).then(res => {\n      alert(\"Job deleted!\");\n      window.location.reload(false);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavbarRecruiter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 37\n      }\n    }), this.state.jobs && this.state.jobs.length !== 0 ? /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      md: 12,\n      lg: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      size: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 45\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 45\n      }\n    }, \"Date of posting\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 45\n      }\n    }, \"No. of Applications received\"), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 45\n      }\n    }, \"Remaining No. of Positions\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      colSpan: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 45\n      }\n    }, \"Options for the job listing\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 33\n      }\n    }, this.state.jobs.map((job, ind) => job.email === this.state.user.email ? /*#__PURE__*/React.createElement(TableRow, {\n      key: ind,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 45\n      }\n    }, job.title), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 45\n      }\n    }, job.dateOfPosting.split(\"T\")[0]), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 45\n      }\n    }, job.receivedApplicants.length), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 45\n      }\n    }, job.maxPositions - job.noOfAccepted), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.editJob(job['id'] ? job['id'] : job['_id']),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 56\n      }\n    }, \"Edit\")), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.deleteJob(job['id'] ? job['id'] : job['_id']),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 56\n      }\n    }, \"Delete\")), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.chooseJob(job['id'] ? job['id'] : job['_id']),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 56\n      }\n    }, \"Recruit\"))) : \"\")))))) : \"You have no listings currently!\");\n  }\n\n}\n\nexport default MyListings;","map":{"version":3,"sources":["C:/ECHO/MERNSTACK/New folder/Job-Application-Portal/frontend/src/components/Recruiters/MyListings.js"],"names":["React","Component","axios","Paper","Grid","TableCell","TableHead","TableRow","Table","TableBody","Button","NavbarRecruiter","MyListings","constructor","props","state","user","jobs","componentDidMount","get","headers","localStorage","getItem","split","then","res","setState","data","catch","err","console","log","response","error","chooseJob","jobId","history","push","editJob","deleteJob","post","alert","window","location","reload","render","length","map","job","ind","email","title","dateOfPosting","receivedApplicants","maxPositions","noOfAccepted"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport NavbarRecruiter from '../templates/NavbarRecruiter';\r\n\r\nclass MyListings extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {},\r\n            jobs: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get('http://localhost:4000/user/me', { \r\n            headers: { \r\n                \"token\": localStorage.getItem(\"token\") ? localStorage.getItem(\"token\").split(\" \")[1] : \"\"\r\n            }})\r\n             .then(res => {\r\n                this.setState({user: res.data});\r\n            })\r\n             .catch(err => {console.log(err)});\r\n\r\n        axios.get('http://localhost:4000/job')\r\n             .then(response => {\r\n                 this.setState({jobs: response.data});\r\n             })\r\n             .catch(function(error) {\r\n                 console.log(error);\r\n             })\r\n    }\r\n\r\n    chooseJob(jobId){\r\n        this.props.history.push('/choose-job/'+jobId);\r\n    }\r\n\r\n    editJob(jobId){\r\n        this.props.history.push('/edit-job/'+jobId);\r\n    }\r\n\r\n    deleteJob(jobId){\r\n        axios.post('http://localhost:4000/job/deleteJob/'+jobId)\r\n             .then(res => {\r\n                 alert(\"Job deleted!\");\r\n                 window.location.reload(false);\r\n             })\r\n             .catch(function(error) {\r\n                 console.log(error);\r\n             })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"container\">\r\n                <NavbarRecruiter /> <br />\r\n                {this.state.jobs && this.state.jobs.length !== 0 ?\r\n                <Grid container>\r\n                    <Grid item xs={12} md={12} lg={12}>\r\n                        <Paper>\r\n                            <Table size=\"small\">\r\n                                <TableHead>\r\n                                    <TableRow>\r\n                                            <TableCell>Title</TableCell>\r\n                                            <TableCell>Date of posting</TableCell>\r\n                                            <TableCell>No. of Applications received</TableCell>\r\n                                            <TableCell>Remaining No. of Positions</TableCell>\r\n                                            <TableCell align=\"center\" colSpan={3}>Options for the job listing</TableCell>\r\n                                    </TableRow>\r\n                                </TableHead>\r\n                                <TableBody>\r\n                                    {this.state.jobs.map((job,ind) => (\r\n                                        job.email === this.state.user.email ?\r\n                                        <TableRow key={ind}>\r\n                                            <TableCell>{job.title}</TableCell>\r\n                                            <TableCell>{job.dateOfPosting.split(\"T\")[0]}</TableCell>\r\n                                            <TableCell>{job.receivedApplicants.length}</TableCell>\r\n                                            <TableCell>{job.maxPositions - job.noOfAccepted}</TableCell>\r\n                                            <TableCell><Button onClick={() => this.editJob(job['id'] ? job['id'] : job['_id'])}>Edit</Button></TableCell>\r\n                                            <TableCell><Button onClick={() => this.deleteJob(job['id'] ? job['id'] : job['_id'])}>Delete</Button></TableCell>\r\n                                            <TableCell><Button onClick={() => this.chooseJob(job['id'] ? job['id'] : job['_id'])}>Recruit</Button></TableCell>\r\n                                        </TableRow>\r\n                                        : \"\"\r\n                                ))}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Paper>               \r\n                    </Grid>    \r\n                </Grid> \r\n                : \"You have no listings currently!\" }          \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MyListings;"]},"metadata":{},"sourceType":"module"}